[NbConvertApp] Converting notebook hyperparam.ipynb to notebook
Traceback (most recent call last):
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/bin/jupyter-nbconvert", line 8, in <module>
    sys.exit(main())
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/jupyter_core/application.py", line 283, in launch_instance
    super().launch_instance(argv=argv, **kwargs)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/traitlets/config/application.py", line 1075, in launch_instance
    app.start()
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/nbconvertapp.py", line 420, in start
    self.convert_notebooks()
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/nbconvertapp.py", line 597, in convert_notebooks
    self.convert_single_notebook(notebook_filename)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/nbconvertapp.py", line 563, in convert_single_notebook
    output, resources = self.export_single_notebook(
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/nbconvertapp.py", line 487, in export_single_notebook
    output, resources = self.exporter.from_filename(
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/exporters/exporter.py", line 201, in from_filename
    return self.from_file(f, resources=resources, **kw)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/exporters/exporter.py", line 220, in from_file
    return self.from_notebook_node(
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/exporters/notebook.py", line 36, in from_notebook_node
    nb_copy, resources = super().from_notebook_node(nb, resources, **kw)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/exporters/exporter.py", line 154, in from_notebook_node
    nb_copy, resources = self._preprocess(nb_copy, resources)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/exporters/exporter.py", line 353, in _preprocess
    nbc, resc = preprocessor(nbc, resc)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/preprocessors/base.py", line 48, in __call__
    return self.preprocess(nb, resources)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/preprocessors/execute.py", line 103, in preprocess
    self.preprocess_cell(cell, resources, index)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbconvert/preprocessors/execute.py", line 124, in preprocess_cell
    cell = self.execute_cell(cell, index, store_history=True)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/jupyter_core/utils/__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "/usr/lib/python3.10/asyncio/base_events.py", line 649, in run_until_complete
    return future.result()
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/users/gpel0001/nnc-fyp/nnc-venv/lib/python3.10/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# ============================
# 🧪 6. Evaluate Denoising Performance
# ============================
from Utils.denoise import batch_denoise

# Setup test loader using 28spk set (same val set)
test_loader = val_loader  # reuse for consistency

# Evaluate each saved model
for trial in results_df["trial_name"]:
    model_pth = f"Models/{trial}_ConvTasNet.pth"
    metric_out = f"Output/txt/{trial}_metrics.txt"

    print(f"\n🔍 Evaluating {trial} model...")

    model = ConvTasNet()  # default constructor; weights loaded from file

    batch_denoise(
        device=device,
        model=model,
        model_pth=model_pth,
        classical_method=None,
        test_loader=test_loader,
        sr=sr,
        n_fft=n_fft,
        hop_length=hop_length,
        metric_pth=metric_out,
        pto=False  # change to True if you're using PTO loader
    )

------------------

----- stdout -----

🔍 Evaluating T2_BestBaseline model...
----- stdout -----
✔ Metrics saved to Output/txt/T2_BestBaseline_metrics.txt

🔍 Evaluating T6_LargerKernel model...
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mRuntimeError[0m                              Traceback (most recent call last)
Cell [0;32mIn[6], line 18[0m
[1;32m     14[0m [38;5;28mprint[39m([38;5;124mf[39m[38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;124m🔍 Evaluating [39m[38;5;132;01m{[39;00mtrial[38;5;132;01m}[39;00m[38;5;124m model...[39m[38;5;124m"[39m)
[1;32m     16[0m model [38;5;241m=[39m ConvTasNet()  [38;5;66;03m# default constructor; weights loaded from file[39;00m
[0;32m---> 18[0m [43mbatch_denoise[49m[43m([49m
[1;32m     19[0m [43m    [49m[43mdevice[49m[38;5;241;43m=[39;49m[43mdevice[49m[43m,[49m
[1;32m     20[0m [43m    [49m[43mmodel[49m[38;5;241;43m=[39;49m[43mmodel[49m[43m,[49m
[1;32m     21[0m [43m    [49m[43mmodel_pth[49m[38;5;241;43m=[39;49m[43mmodel_pth[49m[43m,[49m
[1;32m     22[0m [43m    [49m[43mclassical_method[49m[38;5;241;43m=[39;49m[38;5;28;43;01mNone[39;49;00m[43m,[49m
[1;32m     23[0m [43m    [49m[43mtest_loader[49m[38;5;241;43m=[39;49m[43mtest_loader[49m[43m,[49m
[1;32m     24[0m [43m    [49m[43msr[49m[38;5;241;43m=[39;49m[43msr[49m[43m,[49m
[1;32m     25[0m [43m    [49m[43mn_fft[49m[38;5;241;43m=[39;49m[43mn_fft[49m[43m,[49m
[1;32m     26[0m [43m    [49m[43mhop_length[49m[38;5;241;43m=[39;49m[43mhop_length[49m[43m,[49m
[1;32m     27[0m [43m    [49m[43mmetric_pth[49m[38;5;241;43m=[39;49m[43mmetric_out[49m[43m,[49m
[1;32m     28[0m [43m    [49m[43mpto[49m[38;5;241;43m=[39;49m[38;5;28;43;01mFalse[39;49;00m[43m  [49m[38;5;66;43;03m# change to True if you're using PTO loader[39;49;00m
[1;32m     29[0m [43m[49m[43m)[49m

File [0;32m~/nnc-fyp/.Project/Utils/denoise.py:189[0m, in [0;36mbatch_denoise[0;34m(device, model, model_pth, classical_method, test_loader, sr, n_fft, hop_length, metric_pth, pto)[0m
[1;32m    185[0m         pesq_list[38;5;241m.[39mappend(pesq_s); stoi_list[38;5;241m.[39mappend(stoi_s)
[1;32m    187[0m [38;5;66;03m# === Model-based Denoising ===[39;00m
[1;32m    188[0m [38;5;28;01melse[39;00m:
[0;32m--> 189[0m     [43mmodel[49m[38;5;241;43m.[39;49m[43mload_state_dict[49m[43m([49m[43mtorch[49m[38;5;241;43m.[39;49m[43mload[49m[43m([49m[43mmodel_pth[49m[43m,[49m[43m [49m[43mmap_location[49m[38;5;241;43m=[39;49m[43mdevice[49m[43m)[49m[43m)[49m
[1;32m    190[0m     model[38;5;241m.[39mto(device)[38;5;241m.[39meval()
[1;32m    191[0m     inverse_spec [38;5;241m=[39m T[38;5;241m.[39mInverseSpectrogram(n_fft[38;5;241m=[39mn_fft, hop_length[38;5;241m=[39mhop_length)[38;5;241m.[39mto(device)

File [0;32m~/nnc-fyp/nnc-venv/lib/python3.10/site-packages/torch/nn/modules/module.py:2581[0m, in [0;36mModule.load_state_dict[0;34m(self, state_dict, strict, assign)[0m
[1;32m   2573[0m         error_msgs[38;5;241m.[39minsert(
[1;32m   2574[0m             [38;5;241m0[39m,
[1;32m   2575[0m             [38;5;124m"[39m[38;5;124mMissing key(s) in state_dict: [39m[38;5;132;01m{}[39;00m[38;5;124m. [39m[38;5;124m"[39m[38;5;241m.[39mformat(
[1;32m   2576[0m                 [38;5;124m"[39m[38;5;124m, [39m[38;5;124m"[39m[38;5;241m.[39mjoin([38;5;124mf[39m[38;5;124m'[39m[38;5;124m"[39m[38;5;132;01m{[39;00mk[38;5;132;01m}[39;00m[38;5;124m"[39m[38;5;124m'[39m [38;5;28;01mfor[39;00m k [38;5;129;01min[39;00m missing_keys)
[1;32m   2577[0m             ),
[1;32m   2578[0m         )
[1;32m   2580[0m [38;5;28;01mif[39;00m [38;5;28mlen[39m(error_msgs) [38;5;241m>[39m [38;5;241m0[39m:
[0;32m-> 2581[0m     [38;5;28;01mraise[39;00m [38;5;167;01mRuntimeError[39;00m(
[1;32m   2582[0m         [38;5;124m"[39m[38;5;124mError(s) in loading state_dict for [39m[38;5;132;01m{}[39;00m[38;5;124m:[39m[38;5;130;01m\n[39;00m[38;5;130;01m\t[39;00m[38;5;132;01m{}[39;00m[38;5;124m"[39m[38;5;241m.[39mformat(
[1;32m   2583[0m             [38;5;28mself[39m[38;5;241m.[39m[38;5;18m__class__[39m[38;5;241m.[39m[38;5;18m__name__[39m, [38;5;124m"[39m[38;5;130;01m\n[39;00m[38;5;130;01m\t[39;00m[38;5;124m"[39m[38;5;241m.[39mjoin(error_msgs)
[1;32m   2584[0m         )
[1;32m   2585[0m     )
[1;32m   2586[0m [38;5;28;01mreturn[39;00m _IncompatibleKeys(missing_keys, unexpected_keys)

[0;31mRuntimeError[0m: Error(s) in loading state_dict for ConvTasNet:
	size mismatch for encoder.weight: copying a param with shape torch.Size([128, 2, 5, 5]) from checkpoint, the shape in current model is torch.Size([128, 2, 3, 3]).
	size mismatch for decoder.weight: copying a param with shape torch.Size([2, 128, 5, 5]) from checkpoint, the shape in current model is torch.Size([2, 128, 3, 3]).

